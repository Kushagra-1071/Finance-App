{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kusha\\\\Downloads\\\\Finance-App\\\\finshark\\\\src\\\\Components\\\\CompanyProfile\\\\CompanyProfile.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useOutletContext } from 'react-router';\nimport { getKeyMetrics } from '../../api';\nimport RatioList from '../RatioList/RatioList';\nimport Spinner from '../Spinners/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst tableConfig = [{\n  label: \"Market Cap\",\n  render: company => company.marketCapTTM\n}, {\n  label: \"Current Ratio\",\n  render: company => company.currentRatioTTM\n}, {\n  label: \"Return On Equity\",\n  render: company => company.roeTTM\n}, {\n  label: \"Cash Per Share\",\n  render: company => company.cashPerShareTTM\n}, {\n  label: \"Current Ratio\",\n  render: company => company.currentRatioTTM\n}, {\n  label: \"Return On Equity\",\n  render: company => company.roeTTM\n}];\nconst CompanyProfile = props => {\n  _s();\n  const ticker = useOutletContext();\n  const [companyData, setCompanyData] = useState();\n  useEffect(() => {\n    const getCompanyKeyMetrics = async () => {\n      const value = await getKeyMetrics(ticker);\n      setCompanyData(value === null || value === void 0 ? void 0 : value.data[0]);\n    };\n    getCompanyKeyMetrics();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: companyData ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(RatioList, {\n        data: companyData,\n        config: tableConfig\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(CompanyProfile, \"LyEoEqRLxIjNh9ODJ+xRULBbZ9Y=\", false, function () {\n  return [useOutletContext];\n});\n_c = CompanyProfile;\nexport default CompanyProfile;\nvar _c;\n$RefreshReg$(_c, \"CompanyProfile\");","map":{"version":3,"names":["React","useEffect","useState","useOutletContext","getKeyMetrics","RatioList","Spinner","jsxDEV","_jsxDEV","Fragment","_Fragment","tableConfig","label","render","company","marketCapTTM","currentRatioTTM","roeTTM","cashPerShareTTM","CompanyProfile","props","_s","ticker","companyData","setCompanyData","getCompanyKeyMetrics","value","data","children","config","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kusha/Downloads/Finance-App/finshark/src/Components/CompanyProfile/CompanyProfile.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { CompanyKeyMetrics } from '../../company';\r\nimport { useOutletContext } from 'react-router';\r\nimport { getKeyMetrics } from '../../api';\r\nimport RatioList from '../RatioList/RatioList';\r\nimport Spinner from '../Spinners/Spinner';\r\n\r\ntype Props = {}\r\nconst tableConfig = [\r\n  {\r\n    label: \"Market Cap\",\r\n    render: (company: CompanyKeyMetrics) => company.marketCapTTM,\r\n  },\r\n  {\r\n    label: \"Current Ratio\",\r\n    render: (company: CompanyKeyMetrics) => company.currentRatioTTM,\r\n  },\r\n  {\r\n    label: \"Return On Equity\",\r\n    render: (company: CompanyKeyMetrics) => company.roeTTM,\r\n  },\r\n  {\r\n    label: \"Cash Per Share\",\r\n    render: (company: CompanyKeyMetrics) => company.cashPerShareTTM,\r\n  },\r\n  {\r\n    label: \"Current Ratio\",\r\n    render: (company: CompanyKeyMetrics) => company.currentRatioTTM,\r\n  },\r\n  {\r\n    label: \"Return On Equity\",\r\n    render: (company: CompanyKeyMetrics) => company.roeTTM,\r\n  },\r\n];\r\nconst CompanyProfile = (props: Props) => {\r\n  const ticker=useOutletContext<string>();\r\n  const [companyData,setCompanyData]=useState<CompanyKeyMetrics>();\r\n  useEffect(()=>\r\n  {\r\n    const getCompanyKeyMetrics=async()=> \r\n      {\r\n        const value=await getKeyMetrics(ticker);\r\n        setCompanyData(value?.data[0]);\r\n      };\r\n      getCompanyKeyMetrics();\r\n  },[]\r\n  );\r\n  return (\r\n    <>\r\n    {\r\n      companyData? (\r\n        \r\n        <>\r\n        <RatioList data={companyData} config={tableConfig}/>\r\n        </>\r\n\r\n      ): (\r\n        <Spinner/>\r\n      )\r\n    }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CompanyProfile"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,SAASC,gBAAgB,QAAQ,cAAc;AAC/C,SAASC,aAAa,QAAQ,WAAW;AACzC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,OAAO,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG1C,MAAMC,WAAW,GAAG,CAClB;EACEC,KAAK,EAAE,YAAY;EACnBC,MAAM,EAAGC,OAA0B,IAAKA,OAAO,CAACC;AAClD,CAAC,EACD;EACEH,KAAK,EAAE,eAAe;EACtBC,MAAM,EAAGC,OAA0B,IAAKA,OAAO,CAACE;AAClD,CAAC,EACD;EACEJ,KAAK,EAAE,kBAAkB;EACzBC,MAAM,EAAGC,OAA0B,IAAKA,OAAO,CAACG;AAClD,CAAC,EACD;EACEL,KAAK,EAAE,gBAAgB;EACvBC,MAAM,EAAGC,OAA0B,IAAKA,OAAO,CAACI;AAClD,CAAC,EACD;EACEN,KAAK,EAAE,eAAe;EACtBC,MAAM,EAAGC,OAA0B,IAAKA,OAAO,CAACE;AAClD,CAAC,EACD;EACEJ,KAAK,EAAE,kBAAkB;EACzBC,MAAM,EAAGC,OAA0B,IAAKA,OAAO,CAACG;AAClD,CAAC,CACF;AACD,MAAME,cAAc,GAAIC,KAAY,IAAK;EAAAC,EAAA;EACvC,MAAMC,MAAM,GAACnB,gBAAgB,CAAS,CAAC;EACvC,MAAM,CAACoB,WAAW,EAACC,cAAc,CAAC,GAACtB,QAAQ,CAAoB,CAAC;EAChED,SAAS,CAAC,MACV;IACE,MAAMwB,oBAAoB,GAAC,MAAAA,CAAA,KACzB;MACE,MAAMC,KAAK,GAAC,MAAMtB,aAAa,CAACkB,MAAM,CAAC;MACvCE,cAAc,CAACE,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEC,IAAI,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC;IACDF,oBAAoB,CAAC,CAAC;EAC1B,CAAC,EAAC,EACF,CAAC;EACD,oBACEjB,OAAA,CAAAE,SAAA;IAAAkB,QAAA,EAEEL,WAAW,gBAETf,OAAA,CAAAE,SAAA;MAAAkB,QAAA,eACApB,OAAA,CAACH,SAAS;QAACsB,IAAI,EAAEJ,WAAY;QAACM,MAAM,EAAElB;MAAY;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC,gBAClD,CAAC,gBAGHzB,OAAA,CAACF,OAAO;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EACV,gBAED,CAAC;AAEP,CAAC;AAAAZ,EAAA,CA5BKF,cAAc;EAAA,QACLhB,gBAAgB;AAAA;AAAA+B,EAAA,GADzBf,cAAc;AA8BpB,eAAeA,cAAc;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kusha\\\\Downloads\\\\Finance-App\\\\finshark\\\\src\\\\Components\\\\Cashflow Statement\\\\Cashflow.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useOutletContext } from 'react-router';\nimport { getCashflow } from '../../api';\nimport Table from '../Table/Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst config = [{\n  label: \"Date\",\n  render: company => company.date\n}, {\n  label: \"Operating Cashflow\",\n  render: company => company.operatingCashFlow\n}, {\n  label: \"Investing Cashflow\",\n  render: company => company.netCashUsedForInvestingActivites\n}, {\n  label: \"Financing Cashflow\",\n  render: company => company.netCashUsedProvidedByFinancingActivities\n}, {\n  label: \"Cash At End of Period\",\n  render: company => company.cashAtEndOfPeriod\n}, {\n  label: \"CapEX\",\n  render: company => company.capitalExpenditure\n}, {\n  label: \"Issuance Of Stock\",\n  render: company => company.commonStockIssued\n}, {\n  label: \"Free Cash Flow\",\n  render: company => company.freeCashFlow\n}];\nconst Cashflow = props => {\n  _s();\n  const ticker = useOutletContext();\n  const [cashflowData, setCashflow] = useState();\n  useEffect(() => {\n    const fetchCashflow = async () => {\n      const result = await getCashflow(ticker);\n      setCashflow(result.data);\n    };\n    fetchCashflow();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: cashflowData ? /*#__PURE__*/_jsxDEV(Table, {\n      config: config,\n      data: cashflowData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"No Results!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n_s(Cashflow, \"aRcUTS2dr1HNmSEgF4Hnq1fHFUk=\", false, function () {\n  return [useOutletContext];\n});\n_c = Cashflow;\nexport default Cashflow;\nvar _c;\n$RefreshReg$(_c, \"Cashflow\");","map":{"version":3,"names":["React","useEffect","useState","useOutletContext","getCashflow","Table","jsxDEV","_jsxDEV","Fragment","_Fragment","config","label","render","company","date","operatingCashFlow","netCashUsedForInvestingActivites","netCashUsedProvidedByFinancingActivities","cashAtEndOfPeriod","capitalExpenditure","commonStockIssued","freeCashFlow","Cashflow","props","_s","ticker","cashflowData","setCashflow","fetchCashflow","result","data","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kusha/Downloads/Finance-App/finshark/src/Components/Cashflow Statement/Cashflow.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { CompanyCashFlow } from '../../company';\r\nimport { useOutletContext } from 'react-router';\r\nimport { getCashflow } from '../../api';\r\nimport Table from '../Table/Table';\r\n\r\ntype Props = {}\r\nconst config = [\r\n    {\r\n      label: \"Date\",\r\n      render: (company: CompanyCashFlow) => company.date,\r\n    },\r\n    {\r\n      label: \"Operating Cashflow\",\r\n      render: (company: CompanyCashFlow) => company.operatingCashFlow,\r\n    },\r\n    {\r\n      label: \"Investing Cashflow\",\r\n      render: (company: CompanyCashFlow) =>\r\n        company.netCashUsedForInvestingActivites,\r\n    },\r\n    {\r\n      label: \"Financing Cashflow\",\r\n      render: (company: CompanyCashFlow) =>\r\n        company.netCashUsedProvidedByFinancingActivities,\r\n    },\r\n    {\r\n      label: \"Cash At End of Period\",\r\n      render: (company: CompanyCashFlow) => company.cashAtEndOfPeriod,\r\n    },\r\n    {\r\n      label: \"CapEX\",\r\n      render: (company: CompanyCashFlow) => company.capitalExpenditure,\r\n    },\r\n    {\r\n      label: \"Issuance Of Stock\",\r\n      render: (company: CompanyCashFlow) => company.commonStockIssued,\r\n    },\r\n    {\r\n      label: \"Free Cash Flow\",\r\n      render: (company: CompanyCashFlow) => company.freeCashFlow,\r\n    },\r\n  ];\r\n  \r\nconst Cashflow = (props: Props) => {\r\n    const ticker=useOutletContext<string>();\r\n    const [cashflowData,setCashflow]=useState<CompanyCashFlow[]>();\r\n    useEffect(()=>\r\n        {\r\n        const fetchCashflow=async()=>\r\n            {\r\n            \r\n                const result=await getCashflow(ticker!);            \r\n                setCashflow(result!.data);\r\n            };\r\n            fetchCashflow();\r\n        },[]);\r\n  return (\r\n    <>\r\n        {\r\n            cashflowData? (\r\n                <Table config={config} data={cashflowData}/>\r\n            ): (\r\n                <h1>No Results!</h1>\r\n\r\n            )}\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Cashflow"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,SAASC,gBAAgB,QAAQ,cAAc;AAC/C,SAASC,WAAW,QAAQ,WAAW;AACvC,OAAOC,KAAK,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGnC,MAAMC,MAAM,GAAG,CACX;EACEC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAGC,OAAwB,IAAKA,OAAO,CAACC;AAChD,CAAC,EACD;EACEH,KAAK,EAAE,oBAAoB;EAC3BC,MAAM,EAAGC,OAAwB,IAAKA,OAAO,CAACE;AAChD,CAAC,EACD;EACEJ,KAAK,EAAE,oBAAoB;EAC3BC,MAAM,EAAGC,OAAwB,IAC/BA,OAAO,CAACG;AACZ,CAAC,EACD;EACEL,KAAK,EAAE,oBAAoB;EAC3BC,MAAM,EAAGC,OAAwB,IAC/BA,OAAO,CAACI;AACZ,CAAC,EACD;EACEN,KAAK,EAAE,uBAAuB;EAC9BC,MAAM,EAAGC,OAAwB,IAAKA,OAAO,CAACK;AAChD,CAAC,EACD;EACEP,KAAK,EAAE,OAAO;EACdC,MAAM,EAAGC,OAAwB,IAAKA,OAAO,CAACM;AAChD,CAAC,EACD;EACER,KAAK,EAAE,mBAAmB;EAC1BC,MAAM,EAAGC,OAAwB,IAAKA,OAAO,CAACO;AAChD,CAAC,EACD;EACET,KAAK,EAAE,gBAAgB;EACvBC,MAAM,EAAGC,OAAwB,IAAKA,OAAO,CAACQ;AAChD,CAAC,CACF;AAEH,MAAMC,QAAQ,GAAIC,KAAY,IAAK;EAAAC,EAAA;EAC/B,MAAMC,MAAM,GAACtB,gBAAgB,CAAS,CAAC;EACvC,MAAM,CAACuB,YAAY,EAACC,WAAW,CAAC,GAACzB,QAAQ,CAAoB,CAAC;EAC9DD,SAAS,CAAC,MACN;IACA,MAAM2B,aAAa,GAAC,MAAAA,CAAA,KAChB;MAEI,MAAMC,MAAM,GAAC,MAAMzB,WAAW,CAACqB,MAAO,CAAC;MACvCE,WAAW,CAACE,MAAM,CAAEC,IAAI,CAAC;IAC7B,CAAC;IACDF,aAAa,CAAC,CAAC;EACnB,CAAC,EAAC,EAAE,CAAC;EACX,oBACErB,OAAA,CAAAE,SAAA;IAAAsB,QAAA,EAEQL,YAAY,gBACRnB,OAAA,CAACF,KAAK;MAACK,MAAM,EAAEA,MAAO;MAACoB,IAAI,EAAEJ;IAAa;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,gBAE5C5B,OAAA;MAAAwB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAEtB,gBAEP,CAAC;AAEP,CAAC;AAAAX,EAAA,CAzBKF,QAAQ;EAAA,QACGnB,gBAAgB;AAAA;AAAAiC,EAAA,GAD3Bd,QAAQ;AA2Bd,eAAeA,QAAQ;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
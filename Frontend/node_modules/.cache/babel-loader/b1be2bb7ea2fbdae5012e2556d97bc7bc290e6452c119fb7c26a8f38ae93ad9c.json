{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kusha\\\\Downloads\\\\Finance-App\\\\finshark\\\\src\\\\Components\\\\Income-Statement\\\\IncomeStatement.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst configs = [{\n  label: \"Date\",\n  render: company => company.date\n}, {\n  label: \"Revenue\",\n  render: company => formatLargeMonetaryNumber(company.revenue)\n}, {\n  label: \"Cost Of Revenue\",\n  render: company => formatLargeMonetaryNumber(company.costOfRevenue)\n}, {\n  label: \"Depreciation\",\n  render: company => formatLargeMonetaryNumber(company.depreciationAndAmortization)\n}, {\n  label: \"Operating Income\",\n  render: company => formatLargeMonetaryNumber(company.operatingIncome)\n}, {\n  label: \"Income Before Taxes\",\n  render: company => formatLargeMonetaryNumber(company.incomeBeforeTax)\n}, {\n  label: \"Net Income\",\n  render: company => formatLargeMonetaryNumber(company.netIncome)\n}, {\n  label: \"Net Income Ratio\",\n  render: company => formatRatio(company.netIncomeRatio)\n}, {\n  label: \"Earnings Per Share\",\n  render: company => formatRatio(company.eps)\n}, {\n  label: \"Earnings Per Diluted\",\n  render: company => formatRatio(company.epsdiluted)\n}, {\n  label: \"Gross Profit Ratio\",\n  render: company => formatRatio(company.grossProfitRatio)\n}, {\n  label: \"Opearting Income Ratio\",\n  render: company => formatRatio(company.operatingIncomeRatio)\n}, {\n  label: \"Income Before Taxes Ratio\",\n  render: company => formatRatio(company.incomeBeforeTaxRatio)\n}];\nconst IncomeStatement = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"IncomeStatement\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_c = IncomeStatement;\nexport default IncomeStatement;\nvar _c;\n$RefreshReg$(_c, \"IncomeStatement\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","configs","label","render","company","date","formatLargeMonetaryNumber","revenue","costOfRevenue","depreciationAndAmortization","operatingIncome","incomeBeforeTax","netIncome","formatRatio","netIncomeRatio","eps","epsdiluted","grossProfitRatio","operatingIncomeRatio","incomeBeforeTaxRatio","IncomeStatement","props","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kusha/Downloads/Finance-App/finshark/src/Components/Income-Statement/IncomeStatement.tsx"],"sourcesContent":["import React from 'react'\r\nimport { CompanyIncomeStatement } from '../../company';\r\n\r\ntype Props = {}\r\nconst configs = [\r\n  {\r\n    label: \"Date\",\r\n    render: (company: CompanyIncomeStatement) => company.date,\r\n  },\r\n  {\r\n    label: \"Revenue\",\r\n    render: (company: CompanyIncomeStatement) =>\r\n      formatLargeMonetaryNumber(company.revenue),\r\n  },\r\n  {\r\n    label: \"Cost Of Revenue\",\r\n    render: (company: CompanyIncomeStatement) =>\r\n      formatLargeMonetaryNumber(company.costOfRevenue),\r\n  },\r\n  {\r\n    label: \"Depreciation\",\r\n    render: (company: CompanyIncomeStatement) =>\r\n      formatLargeMonetaryNumber(company.depreciationAndAmortization),\r\n  },\r\n  {\r\n    label: \"Operating Income\",\r\n    render: (company: CompanyIncomeStatement) =>\r\n      formatLargeMonetaryNumber(company.operatingIncome),\r\n  },\r\n  {\r\n    label: \"Income Before Taxes\",\r\n    render: (company: CompanyIncomeStatement) =>\r\n      formatLargeMonetaryNumber(company.incomeBeforeTax),\r\n  },\r\n  {\r\n    label: \"Net Income\",\r\n    render: (company: CompanyIncomeStatement) =>\r\n      formatLargeMonetaryNumber(company.netIncome),\r\n  },\r\n  {\r\n    label: \"Net Income Ratio\",\r\n    render: (company: CompanyIncomeStatement) =>\r\n      formatRatio(company.netIncomeRatio),\r\n  },\r\n  {\r\n    label: \"Earnings Per Share\",\r\n    render: (company: CompanyIncomeStatement) => formatRatio(company.eps),\r\n  },\r\n  {\r\n    label: \"Earnings Per Diluted\",\r\n    render: (company: CompanyIncomeStatement) =>\r\n      formatRatio(company.epsdiluted),\r\n  },\r\n  {\r\n    label: \"Gross Profit Ratio\",\r\n    render: (company: CompanyIncomeStatement) =>\r\n      formatRatio(company.grossProfitRatio),\r\n  },\r\n  {\r\n    label: \"Opearting Income Ratio\",\r\n    render: (company: CompanyIncomeStatement) =>\r\n      formatRatio(company.operatingIncomeRatio),\r\n  },\r\n  {\r\n    label: \"Income Before Taxes Ratio\",\r\n    render: (company: CompanyIncomeStatement) =>\r\n      formatRatio(company.incomeBeforeTaxRatio),\r\n  },\r\n];\r\n\r\nconst IncomeStatement = (props: Props) => {\r\n  return (\r\n    <div>IncomeStatement</div>\r\n  )\r\n}\r\n\r\nexport default IncomeStatement"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAIzB,MAAMC,OAAO,GAAG,CACd;EACEC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAGC,OAA+B,IAAKA,OAAO,CAACC;AACvD,CAAC,EACD;EACEH,KAAK,EAAE,SAAS;EAChBC,MAAM,EAAGC,OAA+B,IACtCE,yBAAyB,CAACF,OAAO,CAACG,OAAO;AAC7C,CAAC,EACD;EACEL,KAAK,EAAE,iBAAiB;EACxBC,MAAM,EAAGC,OAA+B,IACtCE,yBAAyB,CAACF,OAAO,CAACI,aAAa;AACnD,CAAC,EACD;EACEN,KAAK,EAAE,cAAc;EACrBC,MAAM,EAAGC,OAA+B,IACtCE,yBAAyB,CAACF,OAAO,CAACK,2BAA2B;AACjE,CAAC,EACD;EACEP,KAAK,EAAE,kBAAkB;EACzBC,MAAM,EAAGC,OAA+B,IACtCE,yBAAyB,CAACF,OAAO,CAACM,eAAe;AACrD,CAAC,EACD;EACER,KAAK,EAAE,qBAAqB;EAC5BC,MAAM,EAAGC,OAA+B,IACtCE,yBAAyB,CAACF,OAAO,CAACO,eAAe;AACrD,CAAC,EACD;EACET,KAAK,EAAE,YAAY;EACnBC,MAAM,EAAGC,OAA+B,IACtCE,yBAAyB,CAACF,OAAO,CAACQ,SAAS;AAC/C,CAAC,EACD;EACEV,KAAK,EAAE,kBAAkB;EACzBC,MAAM,EAAGC,OAA+B,IACtCS,WAAW,CAACT,OAAO,CAACU,cAAc;AACtC,CAAC,EACD;EACEZ,KAAK,EAAE,oBAAoB;EAC3BC,MAAM,EAAGC,OAA+B,IAAKS,WAAW,CAACT,OAAO,CAACW,GAAG;AACtE,CAAC,EACD;EACEb,KAAK,EAAE,sBAAsB;EAC7BC,MAAM,EAAGC,OAA+B,IACtCS,WAAW,CAACT,OAAO,CAACY,UAAU;AAClC,CAAC,EACD;EACEd,KAAK,EAAE,oBAAoB;EAC3BC,MAAM,EAAGC,OAA+B,IACtCS,WAAW,CAACT,OAAO,CAACa,gBAAgB;AACxC,CAAC,EACD;EACEf,KAAK,EAAE,wBAAwB;EAC/BC,MAAM,EAAGC,OAA+B,IACtCS,WAAW,CAACT,OAAO,CAACc,oBAAoB;AAC5C,CAAC,EACD;EACEhB,KAAK,EAAE,2BAA2B;EAClCC,MAAM,EAAGC,OAA+B,IACtCS,WAAW,CAACT,OAAO,CAACe,oBAAoB;AAC5C,CAAC,CACF;AAED,MAAMC,eAAe,GAAIC,KAAY,IAAK;EACxC,oBACErB,OAAA;IAAAsB,QAAA,EAAK;EAAe;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAE9B,CAAC;AAAAC,EAAA,GAJKP,eAAe;AAMrB,eAAeA,eAAe;AAAA,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
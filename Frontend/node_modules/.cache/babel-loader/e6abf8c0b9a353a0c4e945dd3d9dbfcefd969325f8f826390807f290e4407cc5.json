{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kusha\\\\Downloads\\\\Finance-App\\\\finshark\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport CardList from './Components/CardList/CardList';\nimport Search from './Components/Search/Search';\nimport { searchCompanies } from './api';\nimport ListPortfolio from './Components/Portfolio/ListPortfolio/ListPortfolio';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [search, setSearch] = useState(\"\");\n  const [portfolioValues, setPortfolioValues] = useState([]);\n  const [searchResult, setSearchResult] = useState([]);\n  const [serverError, setServerError] = useState(\"\");\n  const handleSearchChange = e => {\n    setSearch(e.target.value);\n    console.log(e);\n  };\n  const onPortfolioCreate = e => {\n    e.preventDefault();\n    const exists = portfolioValues.find(value => value === e.target[0].value);\n    if (exists) return;\n    const updatedPortfolio = [...portfolioValues, e.target[0].value];\n    setPortfolioValues(updatedPortfolio);\n  };\n  const onPortfolioDelete = e => {\n    e.preventDefault();\n    const removed = portfolioValues.filter(value => {\n      return value !== e.target[0].value;\n    });\n    setPortfolioValues(removed);\n  };\n  const onSearchSubmit = async e => {\n    e.preventDefault();\n    const result = await searchCompanies(search);\n    if (typeof result === \"string\") {\n      setServerError(result);\n    } else if (Array.isArray(result.data)) {\n      setSearchResult(result.data);\n    }\n    console.log(searchResult);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      onSearchSubmit: onSearchSubmit,\n      search: search,\n      handleSearchChange: handleSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListPortfolio, {\n      portfolioValues: portfolioValues,\n      onPortfolioDelete: onPortfolioDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), serverError && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: serverError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(CardList, {\n      searchResults: searchResult,\n      onPortfolioCreate: onPortfolioCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"l+VKGpMLHi89niUM3ixH3n6QXs8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","CardList","Search","searchCompanies","ListPortfolio","jsxDEV","_jsxDEV","App","_s","search","setSearch","portfolioValues","setPortfolioValues","searchResult","setSearchResult","serverError","setServerError","handleSearchChange","e","target","value","console","log","onPortfolioCreate","preventDefault","exists","find","updatedPortfolio","onPortfolioDelete","removed","filter","onSearchSubmit","result","Array","isArray","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","searchResults","_c","$RefreshReg$"],"sources":["C:/Users/kusha/Downloads/Finance-App/finshark/src/App.tsx"],"sourcesContent":["import { ChangeEvent, SyntheticEvent, useState } from 'react';\nimport './App.css';\nimport CardList from './Components/CardList/CardList';\nimport Search from './Components/Search/Search';\nimport { CompanySearch } from './company';\nimport { searchCompanies } from './api';\nimport ListPortfolio from './Components/Portfolio/ListPortfolio/ListPortfolio';\nimport Navbar from './Components/Navbar/Navbar';\nimport Hero from './Components/Hero/Hero';\n\nfunction App() {\n  const [search,setSearch]=useState<string>(\"\");\n  const [portfolioValues,setPortfolioValues]=useState<string[]>([]);\n  const [searchResult, setSearchResult]=useState<CompanySearch[]>([]);\n  const [serverError,setServerError]=useState<string>(\"\");\n    const handleSearchChange= (e: ChangeEvent<HTMLInputElement>) => \n        {\n            setSearch(e.target.value);\n            console.log(e);\n        };\n    const onPortfolioCreate= (e: any) => \n    {\n      e.preventDefault();\n      const exists=portfolioValues.find((value)=> value ===e.target[0].value);\n  if(exists) return;\n      const updatedPortfolio=[...portfolioValues,e.target[0].value];\n      setPortfolioValues(updatedPortfolio);\n    }\n    const onPortfolioDelete=(e: any) =>\n      {\n        e.preventDefault();\n        const removed=portfolioValues.filter((value)=> \n        {\n          return value!==e.target[0].value;\n        });\n        setPortfolioValues(removed);\n      };\n        const onSearchSubmit=async (e: SyntheticEvent) => {\n          e.preventDefault();\n            const result=await searchCompanies(search);\n            if(typeof result === \"string\")\n              {\n                setServerError(result);\n              }\n            else if(Array.isArray(result.data))\n            {\n              setSearchResult(result.data);\n            }\n            console.log(searchResult)\n        };\n  return (\n    <div className=\"App\">\n      \n      <Search onSearchSubmit={onSearchSubmit} search={search}  handleSearchChange={handleSearchChange}/>\n      <ListPortfolio portfolioValues={portfolioValues} onPortfolioDelete={onPortfolioDelete}/>\n      {serverError && <h1>{serverError}</h1>} \n      <CardList searchResults={searchResult} onPortfolioCreate={onPortfolioCreate}/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}